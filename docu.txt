os.path.getctime(path):返回path的创建时间；
Path(path).stat().st_mtime:返回文件最近修改的时间
platform.system():获取当前系统；
platform.python_version(): 获取当前python版本

Path(file).stat().st_size / 1e6 :获取文件大小，单位MB；
socket.create_connection(("1.1.1.1", 443), 5) : 可用来检测网络是否连接；
subprocess.check_output(cmd, shell=True).decode(): 执行shell命令且返回结果；

pkg_resources.require(env=None, installer=None):将返回当前包的依赖包

glob.glob('/home/laughing/Documents/**', recursive=True): 返回当前文件夹所有文件，recursive表示递归；
glob.glob('./**/' + file, recursive=True): 返回当前文件夹所有的file；

torch.hub.download_url_to_file(url, f, progress=True):下载链接的目标到文件；

local()：以字典类型返回当前位置的全部局部变量；

contextlib.contextmanager：使用contextmanager装饰器创建上下文管理器，上下文管理器与with使用；

pytorch在分布式训练过程中，对于数据的读取是采用主进程预读取并缓存，然后其它进程从缓存中读取，不同进程之间的数据同步具体通过torch.distributed.barrier()实现。

torch.cuda.get_device_properties(num):获取显卡信息，名字，显存；

torch.sign(x):根据x的正负返回1/-1；

cv2.LUT(x, table): 以x中的值为索引取根据table中的值；

cv2.createCLAHA(clipLimit=8.0, titleGridSize=(8, 8))  用于生成自适应均衡化图像, clipLimit颜色对比度的阈值， titleGridSize进行像素均衡化的网格大小，即在多少网格下进行直方图的均衡化操作

YUV:“Y”表示明亮度（Luminance或Luma），也就是灰阶值，“U”和“V”表示的则是色度（Chrominance或Chroma);
